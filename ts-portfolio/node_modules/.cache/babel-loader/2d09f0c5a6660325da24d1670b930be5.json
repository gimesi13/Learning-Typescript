{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar charCodeOfDot = \".\".charCodeAt(0);\nvar reEscapeChar = /\\\\(\\\\)?/g;\nvar rePropName = RegExp(\n// Match anything that isn't a dot or bracket.\n\"[^.[\\\\]]+\" + \"|\" +\n// Or match property names within brackets.\n\"\\\\[(?:\" +\n// Match a non-string expression.\n\"([^\\\"'][^[]*)\" + \"|\" +\n// Or match strings (supports escaping characters).\n\"([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2\" + \")\\\\]\" + \"|\" +\n// Or match \"\" as the space between consecutive dots or empty brackets.\n\"(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))\", \"g\");\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = function stringToPath(string) {\n  var result = [];\n  if (string.charCodeAt(0) === charCodeOfDot) {\n    result.push(\"\");\n  }\n  string.replace(rePropName, function (match, expression, quote, subString) {\n    var key = match;\n    if (quote) {\n      key = subString.replace(reEscapeChar, \"$1\");\n    } else if (expression) {\n      key = expression.trim();\n    }\n    result.push(key);\n  });\n  return result;\n};\nvar keysCache = {};\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n  if (typeof key !== \"string\") {\n    throw new Error(\"toPath() expects a string\");\n  }\n  if (keysCache[key] == null) {\n    keysCache[key] = stringToPath(key);\n  }\n  return keysCache[key];\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n    if (current === undefined || current === null || typeof current !== \"object\" || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n    current = current[key];\n  }\n  return current;\n};\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n    if (Array.isArray(current)) {\n      throw new Error(\"Cannot set a non-numeric property on an array\");\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n      current[key];\n      var _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n      return _final;\n    } // set result in key\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n  var numericKey = Number(key);\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n  if (!Array.isArray(current)) {\n    throw new Error(\"Cannot set a numeric property on an object\");\n  } // recurse\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n  return array;\n};\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\nvar FORM_ERROR = \"FINAL_FORM/form-error\";\nvar ARRAY_ERROR = \"FINAL_FORM/array-error\";\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n    initialValues = formState.initialValues,\n    lastSubmittedValues = formState.lastSubmittedValues,\n    submitErrors = formState.submitErrors,\n    submitFailed = formState.submitFailed,\n    submitSucceeded = formState.submitSucceeded,\n    submitting = formState.submitting,\n    values = formState.values;\n  var active = field.active,\n    blur = field.blur,\n    change = field.change,\n    data = field.data,\n    focus = field.focus,\n    modified = field.modified,\n    modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n    name = field.name,\n    touched = field.touched,\n    validating = field.validating,\n    visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = [\"active\", \"data\", \"dirty\", \"dirtySinceLastSubmit\", \"error\", \"initial\", \"invalid\", \"length\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitError\", \"submitFailed\", \"submitSucceeded\", \"submitting\", \"touched\", \"valid\", \"value\", \"visited\", \"validating\"];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== \"object\" || !a || typeof b !== \"object\" || !b) {\n    return false;\n  }\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n//      \nfunction subscriptionFilter(dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys$1 = [\"data\"];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = [\"active\", \"dirty\", \"dirtyFields\", \"dirtyFieldsSinceLastSubmit\", \"dirtySinceLastSubmit\", \"error\", \"errors\", \"hasSubmitErrors\", \"hasValidationErrors\", \"initialValues\", \"invalid\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitting\", \"submitError\", \"submitErrors\", \"submitFailed\", \"submitSucceeded\", \"touched\", \"valid\", \"validating\", \"values\", \"visited\"];\n\n//      \nvar shallowEqualKeys = [\"touched\", \"visited\"];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n    return lastResult;\n  };\n};\nvar isPromise = function isPromise(obj) {\n  return !!obj && (typeof obj === \"object\" || typeof obj === \"function\") && typeof obj.then === \"function\";\n};\nvar version = \"4.20.7\";\nvar configOptions = [\"debug\", \"initialValues\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"validate\", \"validateOnBlur\"];\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n    if (value && typeof value === \"object\" && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n    return typeof value !== \"undefined\";\n  });\n};\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n    dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n    modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n    error = _ref.error,\n    errors = _ref.errors,\n    initialValues = _ref.initialValues,\n    pristine = _ref.pristine,\n    submitting = _ref.submitting,\n    submitFailed = _ref.submitFailed,\n    submitSucceeded = _ref.submitSucceeded,\n    submitError = _ref.submitError,\n    submitErrors = _ref.submitErrors,\n    valid = _ref.valid,\n    validating = _ref.validating,\n    values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n  return false;\n}\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n        subscriber = entry.subscriber,\n        notified = entry.notified;\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\nfunction createForm(config) {\n  if (!config) {\n    throw new Error(\"No config specified\");\n  }\n  var debug = config.debug,\n    destroyOnUnregister = config.destroyOnUnregister,\n    keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n    initialValues = config.initialValues,\n    mutators = config.mutators,\n    onSubmit = config.onSubmit,\n    validate = config.validate,\n    validateOnBlur = config.validateOnBlur;\n  if (!onSubmit) {\n    throw new Error(\"No onSubmit function specified\");\n  }\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      asyncErrors: {},\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      resetWhileSubmitting: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var preventNotificationWhileValidationPaused = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(function (errors) {\n          return setErrors(errors, true);\n        }));\n      } else {\n        setErrors(errorsOrPromise, false);\n      }\n    }\n    return promises;\n  };\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n      if (validator) {\n        result.push(validator);\n      }\n      return result;\n    }, []);\n  };\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            if (state.fields[field.name]) {\n              state.fields[field.name].validating = false;\n              setError(error);\n            }\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n    return promises;\n  };\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n    var fields = state.fields,\n      formState = state.formState;\n    var safeFields = _extends({}, fields);\n    var fieldKeys = Object.keys(safeFields);\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n    var limitedFieldLevelValidation = false;\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n    var recordLevelErrors = {};\n    var asyncRecordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors, wasAsync) {\n      if (wasAsync) {\n        asyncRecordLevelErrors = errors || {};\n      } else {\n        recordLevelErrors = errors || {};\n      }\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n    var processErrors = function processErrors(afterAsync) {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors, afterAsync ? asyncRecordLevelErrors // new async errors\n      : formState.asyncErrors);\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n      if (afterAsync) {\n        formState.asyncErrors = asyncRecordLevelErrors;\n      }\n      formState.error = recordLevelErrors[FORM_ERROR];\n    };\n    if (hasAsyncValidations) {\n      // async validations are running, ensure validating is true before notifying\n      state.formState.validating++;\n      callback();\n    } // process sync errors\n\n    processErrors(false); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n    if (hasAsyncValidations) {\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n        processErrors(true);\n      }).then(afterPromise, afterPromise);\n    }\n  };\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n    var fields = state.fields,\n      fieldSubscribers = state.fieldSubscribers,\n      formState = state.formState;\n    var safeFields = _extends({}, fields);\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n      formState = state.formState,\n      lastFormState = state.lastFormState;\n    var safeFields = _extends({}, fields);\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues &&\n    // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n        result.modified[key] = safeFields[key].modified;\n        result.touched[key] = safeFields[key].touched;\n        result.visited[key] = safeFields[key].visited;\n        return result;\n      }, {\n        modified: {},\n        touched: {},\n        visited: {}\n      }),\n      modified = _safeFieldKeys$reduce.modified,\n      touched = _safeFieldKeys$reduce.touched,\n      visited = _safeFieldKeys$reduce.visited;\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== \"production\" && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n  var notifying = false;\n  var scheduleNotification = false;\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n      if (!inBatch && !(validationPaused && preventNotificationWhileValidationPaused)) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n      notifying = false;\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n        formState = state.formState;\n      var previous = fields[name];\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n        formState = state.formState;\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n    focus: function focus(name) {\n      var field = state.fields[name];\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n        formState = state.formState;\n      var safeFields = _extends({}, fields);\n      var values = typeof data === \"function\" ? data(formState.values) : data;\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]) || {};\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation(preventNotification) {\n      if (preventNotification === void 0) {\n        preventNotification = true;\n      }\n      validationPaused = true;\n      preventNotificationWhileValidationPaused = preventNotification;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          modifiedSinceLastSubmit: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n        var noValueInFormState = getIn(state.formState.values, name) === undefined;\n        if (fieldConfig.initialValue !== undefined && (noValueInFormState || getIn(state.formState.values, name) === getIn(state.formState.initialValues, name)) // only initialize if we don't yet have any value for this field\n        ) {\n          state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n          runValidation(undefined, notify);\n        } // only use defaultValue if we don't yet have any value for this field\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined && noValueInFormState) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n        var hasFieldSubscribers = !!state.fieldSubscribers[name];\n        if (hasFieldSubscribers) {\n          // state.fieldSubscribers[name] may have been removed by a mutator\n          delete state.fieldSubscribers[name].entries[index];\n        }\n        var lastOne = hasFieldSubscribers && !Object.keys(state.fieldSubscribers[name].entries).length;\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n      if (state.formState.submitting) {\n        state.formState.resetWhileSubmitting = true;\n      }\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n      preventNotificationWhileValidationPaused = false;\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case \"debug\":\n          debug = value;\n          break;\n        case \"destroyOnUnregister\":\n          destroyOnUnregister = value;\n          break;\n        case \"initialValues\":\n          api.initialize(value);\n          break;\n        case \"keepDirtyOnReinitialize\":\n          keepDirtyOnReinitialize = value;\n          break;\n        case \"mutators\":\n          mutators = value;\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n          break;\n        case \"onSubmit\":\n          onSubmit = value;\n          break;\n        case \"validate\":\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n        case \"validateOnBlur\":\n          validateOnBlur = value;\n          break;\n        default:\n          throw new Error(\"Unrecognised option \" + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n      if (formState.submitting) {\n        return;\n      }\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        resetModifiedAfterSubmit();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n      var submitIsBlocked = beforeSubmit();\n      if (submitIsBlocked) {\n        return;\n      }\n      var resolvePromise;\n      var completeCalled = false;\n      var complete = function complete(errors) {\n        formState.submitting = false;\n        var resetWhileSubmitting = formState.resetWhileSubmitting;\n        if (resetWhileSubmitting) {\n          formState.resetWhileSubmitting = false;\n        }\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          if (!resetWhileSubmitting) {\n            formState.submitFailed = false;\n            formState.submitSucceeded = true;\n          }\n          afterSubmit();\n        }\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n        return errors;\n      };\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error(\"No callback given.\");\n      }\n      if (!subscription) {\n        throw new Error(\"No subscription provided. What values do you want to listen to?\");\n      }\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","charCodeOfDot","charCodeAt","reEscapeChar","rePropName","RegExp","stringToPath","string","result","push","replace","match","expression","quote","subString","key","trim","keysCache","toPath","undefined","length","Error","getIn","state","complexKey","path","current","i","Array","isArray","isNaN","_toPropertyKey","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","Number","setInRecursor","index","value","destroyArrays","_extends2","_ref","_result2","_result","numKeys","Object","keys","_final","map","numericKey","_result3","_array","existingValue","array","concat","splice","setIn","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","field","errors","initialValues","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","blur","change","data","focus","modified","modifiedSinceLastSubmit","name","touched","validating","visited","error","submitError","initial","pristine","isEqual","dirtySinceLastSubmit","valid","dirty","invalid","fieldSubscriptionItems","shallowEqual","a","b","keysA","keysB","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","subscriptionFilter","dest","src","previous","subscription","shallowEqualKeys","different","forEach","indexOf","shallowEqualKeys$1","filterFieldState","previousState","force","formSubscriptionItems","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","version","configOptions","tripleEquals","hasAnyError","convertToExternalFormState","hasSubmitErrors","hasValidationErrors","notifySubscriber","subscriber","lastState","filter","notification","notify","_ref2","entries","entry","notified","createForm","config","debug","destroyOnUnregister","keepDirtyOnReinitialize","mutators","onSubmit","validate","validateOnBlur","subscribers","fieldSubscribers","fields","asyncErrors","resetWhileSubmitting","lastFormState","inBatch","validationPaused","validationBlocked","preventNotificationWhileValidationPaused","nextAsyncValidationKey","asyncValidationPromises","clearAsyncValidationPromise","changeValue","mutate","before","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","reduce","runRecordLevelValidation","setErrors","promises","errorsOrPromise","getValidators","validators","validator","runFieldLevelValidation","setError","errorOrPromise","promise","fieldChanged","callback","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","validateFields","recordLevelErrors","asyncRecordLevelErrors","fieldLevelErrors","wasAsync","hasAsyncValidations","asyncValidationPromiseKey","Promise","all","processErrors","afterAsync","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromise","notifyField","fieldState","fieldSubscriber","markAllFieldsTouched","hasSyncErrors","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","dirtyFieldsSinceLastSubmit","nonNullLastSubmittedValues","nextFormState","_safeFieldKeys$reduce","callDebug","notifying","scheduleNotification","beforeSubmit","afterSubmit","resetModifiedAfterSubmit","batch","getFieldState","getRegisteredFields","getState","initialize","savedDirtyValues","isValidationPaused","pauseValidation","preventNotification","registerField","fieldConfig","haveValidator","silent","getValidator","noValueInFormState","initialValue","defaultValue","validatorRemoved","hasFieldSubscribers","lastOne","reset","restart","resumeValidation","setConfig","submit","asyncValidationPromisesKeys","console","submitIsBlocked","resolvePromise","completeCalled","complete","resolve","subscribe","memoized"],"sources":["C:/Users/user/Desktop/Coding/Learning-Typescript/ts-portfolio/node_modules/final-form/dist/final-form.es.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar charCodeOfDot = \".\".charCodeAt(0);\nvar reEscapeChar = /\\\\(\\\\)?/g;\nvar rePropName = RegExp( // Match anything that isn't a dot or bracket.\n\"[^.[\\\\]]+\" + \"|\" + // Or match property names within brackets.\n\"\\\\[(?:\" + // Match a non-string expression.\n\"([^\\\"'][^[]*)\" + \"|\" + // Or match strings (supports escaping characters).\n\"([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2\" + \")\\\\]\" + \"|\" + // Or match \"\" as the space between consecutive dots or empty brackets.\n\"(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))\", \"g\");\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = function stringToPath(string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === charCodeOfDot) {\n    result.push(\"\");\n  }\n\n  string.replace(rePropName, function (match, expression, quote, subString) {\n    var key = match;\n\n    if (quote) {\n      key = subString.replace(reEscapeChar, \"$1\");\n    } else if (expression) {\n      key = expression.trim();\n    }\n\n    result.push(key);\n  });\n  return result;\n};\n\nvar keysCache = {};\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== \"string\") {\n    throw new Error(\"toPath() expects a string\");\n  }\n\n  if (keysCache[key] == null) {\n    keysCache[key] = stringToPath(key);\n  }\n\n  return keysCache[key];\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== \"object\" || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error(\"Cannot set a non-numeric property on an array\");\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      current[key];\n          var _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error(\"Cannot set a numeric property on an object\");\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = \"FINAL_FORM/form-error\";\nvar ARRAY_ERROR = \"FINAL_FORM/array-error\";\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = [\"active\", \"data\", \"dirty\", \"dirtySinceLastSubmit\", \"error\", \"initial\", \"invalid\", \"length\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitError\", \"submitFailed\", \"submitSucceeded\", \"submitting\", \"touched\", \"valid\", \"value\", \"visited\", \"validating\"];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== \"object\" || !a || typeof b !== \"object\" || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys$1 = [\"data\"];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = [\"active\", \"dirty\", \"dirtyFields\", \"dirtyFieldsSinceLastSubmit\", \"dirtySinceLastSubmit\", \"error\", \"errors\", \"hasSubmitErrors\", \"hasValidationErrors\", \"initialValues\", \"invalid\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitting\", \"submitError\", \"submitErrors\", \"submitFailed\", \"submitSucceeded\", \"touched\", \"valid\", \"validating\", \"values\", \"visited\"];\n\n//      \nvar shallowEqualKeys = [\"touched\", \"visited\"];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === \"object\" || typeof obj === \"function\") && typeof obj.then === \"function\";\n});\n\nvar version = \"4.20.7\";\n\nvar configOptions = [\"debug\", \"initialValues\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"validate\", \"validateOnBlur\"];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === \"object\" && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== \"undefined\";\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error(\"No config specified\");\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error(\"No onSubmit function specified\");\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      asyncErrors: {},\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      resetWhileSubmitting: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var preventNotificationWhileValidationPaused = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(function (errors) {\n          return setErrors(errors, true);\n        }));\n      } else {\n        setErrors(errorsOrPromise, false);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            if (state.fields[field.name]) {\n              state.fields[field.name].validating = false;\n              setError(error);\n            }\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var asyncRecordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors, wasAsync) {\n      if (wasAsync) {\n        asyncRecordLevelErrors = errors || {};\n      } else {\n        recordLevelErrors = errors || {};\n      }\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors(afterAsync) {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors, afterAsync ? asyncRecordLevelErrors // new async errors\n      : formState.asyncErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      if (afterAsync) {\n        formState.asyncErrors = asyncRecordLevelErrors;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    };\n\n    if (hasAsyncValidations) {\n      // async validations are running, ensure validating is true before notifying\n      state.formState.validating++;\n      callback();\n    } // process sync errors\n\n\n    processErrors(false); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors(true);\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues && // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== \"production\" && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !(validationPaused && preventNotificationWhileValidationPaused)) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === \"function\" ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]) || {};\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation(preventNotification) {\n      if (preventNotification === void 0) {\n        preventNotification = true;\n      }\n\n      validationPaused = true;\n      preventNotificationWhileValidationPaused = preventNotification;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          modifiedSinceLastSubmit: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        var noValueInFormState = getIn(state.formState.values, name) === undefined;\n\n        if (fieldConfig.initialValue !== undefined && (noValueInFormState || getIn(state.formState.values, name) === getIn(state.formState.initialValues, name)) // only initialize if we don't yet have any value for this field\n        ) {\n          state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n          runValidation(undefined, notify);\n        } // only use defaultValue if we don't yet have any value for this field\n\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined && noValueInFormState) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        var hasFieldSubscribers = !!state.fieldSubscribers[name];\n\n        if (hasFieldSubscribers) {\n          // state.fieldSubscribers[name] may have been removed by a mutator\n          delete state.fieldSubscribers[name].entries[index];\n        }\n\n        var lastOne = hasFieldSubscribers && !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        state.formState.resetWhileSubmitting = true;\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n      preventNotificationWhileValidationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case \"debug\":\n          debug = value;\n          break;\n\n        case \"destroyOnUnregister\":\n          destroyOnUnregister = value;\n          break;\n\n        case \"initialValues\":\n          api.initialize(value);\n          break;\n\n        case \"keepDirtyOnReinitialize\":\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case \"mutators\":\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case \"onSubmit\":\n          onSubmit = value;\n          break;\n\n        case \"validate\":\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case \"validateOnBlur\":\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error(\"Unrecognised option \" + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        resetModifiedAfterSubmit();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n        var resetWhileSubmitting = formState.resetWhileSubmitting;\n\n        if (resetWhileSubmitting) {\n          formState.resetWhileSubmitting = false;\n        }\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          if (!resetWhileSubmitting) {\n            formState.submitFailed = false;\n            formState.submitSucceeded = true;\n          }\n\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error(\"No callback given.\");\n      }\n\n      if (!subscription) {\n        throw new Error(\"No subscription provided. What values do you want to listen to?\");\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}